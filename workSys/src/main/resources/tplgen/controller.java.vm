package ${package.Controller};

import ${package.Entity}.${entity};
import ${package.Parent}.dto.${DtoName};
import ${package.Service}.${table.serviceName};
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.rose.common.model.IdModel;
import com.rose.common.model.IdsModel;
import org.springframework.web.bind.annotation.*;
import com.rose.common.model.Result;
import java.util.List;
import javax.annotation.Resource;
import lombok.extern.log4j.Log4j2;
import org.springframework.web.bind.annotation.RequestMapping;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};import javax.annotation.Resource;
#end

/**
 * $!{table.comment}控制层
 *
 * @author ${author}
 * @since ${date}
 */
@Log4j2
@RestController
#set($mapName = ${table.entityPath.replace("PO","")})
@RequestMapping("#if(${package.ModuleName})${package.ModuleName}#end#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${mapName}#end")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end
#set($service_name = ${table.serviceName})
#set($service_name = $service_name.substring(0,1).toLowerCase() + $service_name.substring(1))
    @Resource
    private ${table.serviceName} ${service_name};

    /**
    * 添加数据
    *
    * @param po
    * @return
    */
    @PostMapping("add")
    public Result<Void> add(@RequestBody ${entity} po){
        return ${service_name}.add(po);
    }

    /**
    * 根据ID删除数据
    *
    * @param idModel
    * @return
    */
    @PostMapping("delById")
    public Result<Void> delById(@RequestBody IdModel idModel){
        return ${service_name}.delById(idModel.getId());
    }

    /**
    * 根据ID批量删除数据
    *
    * @param idsModel
    * @return
    */
    @PostMapping("delByIdList")
    public Result<Void> delByIdList(@RequestBody IdsModel idsModel){
        return ${service_name}.delByIdList(idsModel.getIds());
    }

    /**
    * 修改数据（空字段不更新）
    *
    * @param po
    * @return
    */
    @PostMapping("update")
    public Result<Void> update(@RequestBody ${entity} po){
        return ${service_name}.update(po);
    }

    /**
    * 根据ID查询数据
    *
    * @param idModel
    * @return
    */
    @PostMapping("getById")
    public Result<${entity}> getById(@RequestBody IdModel idModel){
        return ${service_name}.getById(idModel.getId());
    }

    /**
     * 分页查询
     *
     * @param ${dtoName}
     * @return
     */
    @PostMapping("getPage")
    public Result<Page<${entity}>> getPage(@RequestBody ${DtoName} ${dtoName}) {
        return ${service_name}.getPage(${dtoName});
    }

    /**
     * 查询列表
     *
     * @param ${dtoName}
     * @return
     */
    @PostMapping("getList")
    public Result<List<${entity}>> getList(@RequestBody ${DtoName} ${dtoName}) {
        return ${service_name}.getList(${dtoName});
    }
}